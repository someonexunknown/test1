@import url('https://unpkg.com/normalize.css') layer(normalize);

@layer normalize, base, demo;

@layer demo {
  .container {
    --font-level: 7;
    opacity: 0;
    height: 4lh;
    display: flex;
    /* border: 3px solid red; */
    place-items: center;
    mask: linear-gradient(
      #0000 0.25lh,
      #fff calc(50% - 0.5lh) calc(50% + 0.5lh),
      #0000 calc(100% - 0.25lh)
    );
    color: color-mix(in lch, canvasText, canvas 15%);
    text-align: center;
    position: fixed; /* Changed from absolute */
    left: 20px; /* Added */
    top: 50%; /* Added */
    transform: translateY(-50%); /* Added */
    z-index: 10; /* Added */
  }
  ul {
    padding: 0;
    margin: 0;
    list-style-type: none;
    text-transform: uppercase;
    line-height: 1;
    font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;
    height: 1lh;
    display: inline-grid;
    flex-direction: column;
    position: relative;
    padding-inline: 0.25em;
    align-items: center;
    align-content: center;
    justify-content: center;
    justify-items: center;
    text-align: center;
  }

  .indicator {
    --c: 0.175em;

    position: absolute;
    top: 50%;
    left: 50%;
    height: 1lh;
    translate: -50% -50%;
    border: 0.05em solid oklch(0.75 1 var(--h, 320));
    transition: width 0.25s, border-color 0.25s;
    width: calc((var(--width) * 1px) + var(--c));
    /* alternative: mask-composite */
    -webkit-clip-path: polygon(
      /* top left corner */ 0 0,
      var(--c) 0,
      var(--c) var(--c),
      0 var(--c),
      0 100%,
      /* bottom left corner */ 0 calc(100% - var(--c)),
      var(--c) calc(100% - var(--c)),
      var(--c) 100%,
      0 100%,
      /* bottom right corner */ calc(100% - var(--c)) 100%,
      calc(100% - var(--c)) calc(100% - var(--c)),
      100% calc(100% - var(--c)),
      100% 100%,
      /* top right corner */ 100% var(--c),
      calc(100% - var(--c)) var(--c),
      calc(100% - var(--c)) 0,
      100% 0,
      /* back to the start */ 100% 100%,
      0 100%
    );
            clip-path: polygon(
      /* top left corner */ 0 0,
      var(--c) 0,
      var(--c) var(--c),
      0 var(--c),
      0 100%,
      /* bottom left corner */ 0 calc(100% - var(--c)),
      var(--c) calc(100% - var(--c)),
      var(--c) 100%,
      0 100%,
      /* bottom right corner */ calc(100% - var(--c)) 100%,
      calc(100% - var(--c)) calc(100% - var(--c)),
      100% calc(100% - var(--c)),
      100% 100%,
      /* top right corner */ 100% var(--c),
      calc(100% - var(--c)) var(--c),
      calc(100% - var(--c)) 0,
      100% 0,
      /* back to the start */ 100% 100%,
      0 100%
    );
  }

  li {
    display: inline-block;
    width: -webkit-fit-content;
    width: -moz-fit-content;
    width: fit-content;
    height: 1lh;
    grid-area: 1 / 1;
    line-height: 1.2;
  }
}

@layer base {
  :root {
    --font-size-min: 16;
    --font-size-max: 20;
    --font-ratio-min: 1.2;
    --font-ratio-max: 1.33;
    --font-width-min: 375;
    --font-width-max: 1500;
  }

  html {
    color-scheme: light dark;
  }

  [data-theme='light'] {
    color-scheme: light only;
  }

  [data-theme='dark'] {
    color-scheme: dark only;
  }

  :where(.fluid) {
    --fluid-min: calc(
      var(--font-size-min) * pow(var(--font-ratio-min), var(--font-level, 0))
    );
    --fluid-max: calc(
      var(--font-size-max) * pow(var(--font-ratio-max), var(--font-level, 0))
    );
    --fluid-preferred: calc(
      (var(--fluid-max) - var(--fluid-min)) /
        (var(--font-width-max) - var(--font-width-min))
    );
    --fluid-type: clamp(
      (var(--fluid-min) / 16) * 1rem,
      ((var(--fluid-min) / 16) * 1rem) -
        (((var(--fluid-preferred) * var(--font-width-min)) / 16) * 1rem) +
        (var(--fluid-preferred) * var(--variable-unit, 100vi)),
      (var(--fluid-max) / 16) * 1rem
    );
    font-size: var(--fluid-type);
  }

  *,
  *:after,
  *:before {
    box-sizing: border-box;
  }

  body {
    display: grid;
    place-items: center;
    min-height: 100vh;
    font-family: 'SF Pro Text', 'SF Pro Icons', 'AOS Icons', 'Helvetica Neue',
      Helvetica, Arial, sans-serif, system-ui;
  }

  body::before {
    --size: 45px;
    --line: color-mix(in hsl, canvasText, transparent 70%);
    content: '';
    height: 100vh;
    width: 100vw;
    position: fixed;
    background: linear-gradient(
          90deg,
          var(--line) 1px,
          transparent 1px var(--size)
        )
        50% 50% / var(--size) var(--size),
      linear-gradient(var(--line) 1px, transparent 1px var(--size)) 50% 50% /
        var(--size) var(--size);
    -webkit-mask: linear-gradient(-20deg, transparent 50%, white);
            mask: linear-gradient(-20deg, transparent 50%, white);
    top: 0;
    transform-style: flat;
    pointer-events: none;
  }

  .bear-link {
    color: canvasText;
    position: fixed;
    top: 1rem;
    left: 1rem;
    width: 48px;
    aspect-ratio: 1;
    display: grid;
    place-items: center;
    opacity: 0.8;
  }

  :where(.x-link, .bear-link):is(:hover, :focus-visible) {
    opacity: 1;
  }

  .bear-link svg {
    width: 75%;
  }

  /* Utilities */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
}


#canvas {
   position: fixed;  /* Change from absolute to fixed */
  z-index: -1;
  height: 100vh;   /* Change from 100% to 100vh */
  width: 100vw;    /* Change from 100% to 100vw */
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  overflow: hidden;
  margin: 0;       /* Add margin 0 */
  padding: 0; 
}